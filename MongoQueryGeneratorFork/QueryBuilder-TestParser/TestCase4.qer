Solution: "Garage"
Description: "Ternary - Mapping 1"
Version: "1.0"

############## ERModel ################

Person {
    id: string,
    name: string,
    address: string
}
Car {
    id: string,
    name: string,
    color: string
}
Insurance {
    id: string,
    value: int,
    company: string
}
Has (Person, Car, Insurance) {
}
Drives (Person, Car) {

}

############# MongoDBSchema ############## 
DocTypePerson [ Person*, Car, Drives, Has ]
{
    _id     : string            < Person.id >
    fName   : string            < Person.name >
    fAddress: string            < Person.address >
    fCarId  : string            < Car.id >
}
DocTypeCar [ Car* ]
{
    _id     : string    [ Car.id ]
    fName   : string    [ Car.name ]
    fColor  : string    [ Car.color ]
}
DocTypeInsurance [ Insurance*, Person, Has ]
{
    _id      : string   [ Insurance.id ]
    fValue   : int      [ Insurance.value ]
    fCompany : string   [ Insurance.company ]
    fPersonId: string   [ Person.id ]
}


Person p RJOIN Has (Car c, Insurance i)

[
    {
        _id: 1,
        name: João Vitor,
        data_Has: [
            {
                hasId: "has1",
                fCarId: "Onix",
                fInsuranceId: 1001
            },
            {
                hasId: "has2",
                fCarId: "Onix",
                fInsuranceId: 1002
            },
            {
                hasId: "has3",
                fCarId: "Celta",
                fInsuranceId: 1003
            },
            {
                hasId: "has4",
                fCarId: "Celta",
                fInsuranceId: 1004
            }
        ]
    },
    // outras pessoas
]







DocTypeHas < Has*, Person, Car, Insurance >
{
    _id         : string    < Has.id >
    fPersonId   : string    < Person.id >
    fCarId      : string    < Car.id >
    fInsuranceId: string[]  < Insurance.id >
}

Person p RJOIN Has (Car c, Insurance i)

[
    {
        _id: 1,
        name: João Vitor,
        data_Has: [
            {
                hasId: "has1",
                fCarId: "Onix",
                data_Insurance: [
                    {
                        _id: 1001,
                    },
                    {
                        _id: 1002,
                    },

                ]
            },
            {
                hasId: "has2",
                fCarId: "Celta",
                data_Insurance: [
                    {
                        _id: 1003
                    },
                    {
                        _id: 1004
                    },
                ]
            }
        ]
    },
    // outras pessoas
]